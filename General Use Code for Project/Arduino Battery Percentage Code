// Define the pin connections
const int redPin = 9;
const int greenPin = 10;
const int bluePin = 11;
const int batteryPin = A0;

// Define voltage divider resistors
const float R1 = 10000; // 10k ohms
const float R2 = 10000; // 10k ohms

void setup() {
  pinMode(redPin, OUTPUT);
  pinMode(greenPin, OUTPUT);
  pinMode(bluePin, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  // Read the battery voltage
  int sensorValue = analogRead(batteryPin);
  
  // Convert the analog reading (0 - 1023) to a voltage (0 - 5V)
  float batteryVoltage = sensorValue * (5.0 / 1023.0);
  
  // Calculate the actual battery voltage (considering the voltage divider)
  float actualVoltage = batteryVoltage * ((R1 + R2) / R2);
  
  // Map the voltage to a percentage (adjust based on your battery specs)
  int batteryPercentage = map(actualVoltage, 6.0, 9.0, 0, 100); // Example for 9V battery
  
  // Constrain the percentage to be between 0 and 100
  batteryPercentage = constrain(batteryPercentage, 0, 100);
  
  // Print the battery percentage to the Serial Monitor
  Serial.print("Battery Percentage: ");
  Serial.println(batteryPercentage);
  
  // Set the RGB LED color based on the battery percentage
  if (batteryPercentage >= 75) {
    setColor(0, 255, 0); // Green
  } else if (batteryPercentage >= 40) {
    setColor(255, 255, 0); // Yellow
  } else {
    setColor(255, 0, 0); // Red
  }
  
  delay(1000); // Update every second
}

void setColor(int red, int green, int blue) {
  analogWrite(redPin, red);
  analogWrite(greenPin, green);
  analogWrite(bluePin, blue);
}
